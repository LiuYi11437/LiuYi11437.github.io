(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{285:function(e,a,t){e.exports=t.p+"assets/img/8.387bd347.png"},286:function(e,a,t){e.exports=t.p+"assets/img/9.960835e9.png"},287:function(e,a,t){e.exports=t.p+"assets/img/10.99ba3c80.png"},314:function(e,a,t){"use strict";t.r(a);var s=t(28),l=Object(s.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"js-文件的处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-文件的处理"}},[e._v("#")]),e._v(" js 文件的处理")]),e._v(" "),s("h2",{attrs:{id:"使用-babel-转译-js-文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-babel-转译-js-文件"}},[e._v("#")]),e._v(" 使用 babel 转译 js 文件")]),e._v(" "),s("p",[e._v("安装依赖")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm install --save-dev babel-loader @babel/core @babel/preset-env\n")])])]),s("p",[e._v("无论线上还是线下都需要对 js 文件进行转译，所以 js 文件处理应该放在通用配置中，配置内容如下。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("{\n    test: /\\.js$/,\n    use: {\n        loader: 'babel-loader',\n        options: {\n            presets: ['@babel/preset-env']\n        }\n    },\n    exclude: /node_modules/\n}\n")])])]),s("p",[s("code",[e._v("include")]),e._v("哪个文件下的 js 代码需要 babel 处理")]),e._v(" "),s("p",[s("code",[e._v("exclude")]),e._v("忽略掉哪个文件夹下的 js 文件")]),e._v(" "),s("p",[s("code",[e._v(".babelrc")]),e._v("是 webpack 中 babel 插件默认的配置文件，可以将 babel 对 js 的处理规则单独写在这个文件中，减少 webpack 配置的代码量更容易阅读。")]),e._v(" "),s("p",[e._v("在入口文件中写一段 es6 语句，然后执行打包，将打包好的文件内容与入口文件进行对比")]),e._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:t(285),width:""}})]),e._v(" "),s("p",[e._v("可以看到打包后 const 被翻译成 var,箭头函数被翻译成普通函数。但是 Promise 和 map 这些高级语法中的函数却依然保留，但低版本浏览器并不支持这些函数，因此需要使用 babel 的一个库将这些缺失的函数添加进去。")]),e._v(" "),s("p",[e._v("这个库在线上环境也要使用因此要安装在线上环境下。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm i @babel/polyfill --save\n")])])]),s("p",[e._v("在入口函数中引入这个库")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('import "@babel/polyfill";\n')])])]),s("p",[e._v("再执行打包，可以看到第二次打包的主文件比上次大了很多。那是因为这个库将 es5 中缺省的函数以 es5 的语法进行了实现并引入")]),e._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:t(286),width:""}})]),e._v(" "),s("p",[e._v("但目前是将所有的方法全部引入，无用实际代码中是否用到。可以通过配置 useBuiltIns 实现按需加载，配置内容如下")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n  "presets": [\n    [\n      "@babel/preset-env",\n      {\n        "useBuiltIns": "usage",\n        "corejs": 2\n      }\n    ]\n  ]\n}\n')])])]),s("p",[e._v("再次打包后即可发现文件小了很多,也无需引入@babel/polyfill。")]),e._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:t(287),width:""}})]),e._v("\n用到的插件及作用\n"),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("babel-loader")]),e._v(" "),s("p",[e._v("webpak 与 babel 进行通信用的插件，webpack 本身虽然能对 js 文件进行处理，但不具备将 es6 语法翻译成 es5 的能力。")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://webpack.docschina.org/loaders/babel-loader/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网参考"),s("OutboundLink")],1)])]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("@babel/core")]),e._v(" "),s("p",[e._v("当 webpack 使用 babel-loader 处理文件时，babel-loader 实际上调用了 babel-core 的 api，因此也必须安装 babel-core.")]),e._v(" "),s("p",[s("a",{attrs:{href:"http://babel.docschina.org/docs/en/babel-core#docsNav",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网参考"),s("OutboundLink")],1)])]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("@babel/preset-env")]),e._v(" "),s("p",[e._v("告诉 babel 使用哪种转码规则进行文件处理。")]),e._v(" "),s("p",[s("a",{attrs:{href:"http://babel.docschina.org/docs/en/babel-preset-env",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网参考"),s("OutboundLink")],1)])]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("@babel/polyfill")]),e._v(" "),s("p",[e._v("Babel 默认只转换新的 JavaScript 句法（syntax），而不转换新的 API，比如 Iterator、Generator、Set、Maps、Proxy、Reflect、Symbol、Promise 等全局对象，以及一些定义在全局对象上的方法（比如 Object.assign）都不会转码。")]),e._v(" "),s("p",[e._v("举例来说，ES6 在 Array 对象上新增了 Array.from 方法。Babel 就不会转码这个方法。如果想让这个方法运行，必须使用 babel-polyfill，为当前环境提供一个垫片。")]),e._v(" "),s("p",[s("a",{attrs:{href:"http://babel.docschina.org/docs/en/babel-polyfill#docsNav",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网参考"),s("OutboundLink")],1)])]),e._v(" "),s("h2",{attrs:{id:"使用eslint规范化代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用eslint规范化代码"}},[e._v("#")]),e._v(" 使用eslint规范化代码")]),e._v(" "),s("p",[e._v("安装依赖")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" npm install eslint-loader --save-dev\n")])])]),s("p",[e._v("修改对js的处理规则如下")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n    test: /\\.js$/,\n    use: ["babel-loader", "eslint-loader"],\n    exclude: /node_modules/\n}\n')])])]),s("p",[s("a",{attrs:{href:"https://webpack.docschina.org/loaders/eslint-loader/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网参考"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=l.exports}}]);